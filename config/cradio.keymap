// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF  0
#define SYM  1
#define NUM  2
#define NAV  3
#define FUNC 4
#define DEV  5
#define GAME 6

// ─────────────────────────────────────────────────────────────
// Home Row Mod Macros
// ─────────────────────────────────────────────────────────────
#define HRML(k1, k2, k3, k4) &ht LGUI  k1  &ht LALT  k2  &ht LCTRL  k3  &ht LSHFT  k4
#define HRMR(k1, k2, k3, k4) &ht RSHFT k1  &ht RCTRL k2  &ht RALT   k3  &ht RGUI   k4

/ {
  // ───────────────────────────────────────────────────────────
  // Behaviors
  // ───────────────────────────────────────────────────────────
  behaviors {
    ht: hold_tap {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <220>;
      quick-tap-ms = <150>;
      require-prior-idle-ms = <100>;
      bindings = <&kp>, <&kp>;
    };
  };

  // ───────────────────────────────────────────────────────────
  // Conditional Layers
  // ───────────────────────────────────────────────────────────
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <DEF SYM>;
      then-layer = <NUM>;
    };
  };

  // ───────────────────────────────────────────────────────────
  // Combos
  // ───────────────────────────────────────────────────────────
  combos {
    compatible = "zmk,combos";

    combo_apos  { timeout-ms = <30>; key-positions = <17 18>; bindings = <&kp APOS>;   };
    combo_dash  { timeout-ms = <30>; key-positions = <7 8>;   bindings = <&kp MINUS>;  };
    combo_esc   { timeout-ms = <30>; key-positions = <26 27>; bindings = <&kp ESC>;    };
    combo_del   { timeout-ms = <30>; key-positions = <32 33>; bindings = <&kp DEL>;    };
    combo_dqt   { timeout-ms = <30>; key-positions = <11 12>; bindings = <&kp DQT>;    };
    combo_pipe  { timeout-ms = <30>; key-positions = <21 22>; bindings = <&kp PIPE>;   };
    combo_bslh  { timeout-ms = <30>; key-positions = <27 28>; bindings = <&kp BSLH>;   };
    combo_tilde { timeout-ms = <30>; key-positions = <6 7>;   bindings = <&kp TILDE>;  };
    combo_grave { timeout-ms = <30>; key-positions = <2 3>;   bindings = <&kp GRAVE>;  };
    combo_under { timeout-ms = <30>; key-positions = <1 2>;   bindings = <&kp UNDER>;  };
    combo_plus  { timeout-ms = <30>; key-positions = <12 13>; bindings = <&kp PLUS>;   };
    combo_equal { timeout-ms = <30>; key-positions = <16 17>; bindings = <&kp EQUAL>;  };
  };

  // ───────────────────────────────────────────────────────────
  // Keymap Layers
  // ───────────────────────────────────────────────────────────
  keymap {
    compatible = "zmk,keymap";

    // ╭───────────────────────────────╮
    // │ Default Layer                │
    // ╰───────────────────────────────╯
    def_layer {
      bindings = <
        &kp Q    &kp W    &kp F    &kp P    &kp B          &kp J    &kp L    &kp U    &kp Y     &kp SEMI
        HRML(A,R,S,T)                  &kp G               &kp M       HRMR(N,E,I,O)
        &kp Z    &kp X    &kp C    &kp D    &kp V          &kp K    &kp H    &kp COMMA &kp DOT   &kp FSLH
                        &mt SYM  ENTER   &mt NUM TAB        &mt DEV BSPC  &kp SPACE
      >;
    };

    // ╭───────────────────────────────╮
    // │ Symbol Layer                 │
    // ╰───────────────────────────────╯
    sym_layer {
      bindings = <
        &trans   &trans   &trans   &trans   &trans         &trans     &kp AMPS   &kp ASTRK  &kp PLUS   &trans
        &trans   &trans   &trans   &trans   &trans         &trans     &kp DLLR   &kp PRCNT  &kp CARET  &trans
        &trans   &trans   &trans   &trans   &trans         &trans     &kp EXCL   &kp AT     &kp HASH   &trans
                                &trans     &trans         &trans     &trans
      >;
    };

    // ╭───────────────────────────────╮
    // │ Number Layer                 │
    // ╰───────────────────────────────╯
    num_layer {
      bindings = <
        &trans   &kp LBKT &kp LBRC &kp RBRC &trans         &trans     &kp N7     &kp N8     &kp N9     &trans
        &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT      &trans     &kp N4     &kp N5     &kp N6     &kp N0
        &trans   &trans   &trans   &trans   &trans         &trans     &kp N1     &kp N2     &kp N3     &kp DOT
                                &trans     &trans         &trans     &trans
      >;
    };

    // ╭───────────────────────────────╮
    // │ Navigation Layer             │
    // ╰───────────────────────────────╯
    nav_layer {
      bindings = <
        &trans   &kp LBKT &kp LBRC &kp RBRC &trans         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
        &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT      &kp ASTRK     &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT
        &trans   &trans   &trans   &trans   &trans         &bt BT_CLR    &kp HOME      &kp PG_DN     &kp PG_UP     &kp END
                                &trans     &trans         &sys_reset    &bootloader
      >;
    };

    // ╭───────────────────────────────╮
    // │ Function Layer               │
    // ╰───────────────────────────────╯
    func_layer {
      bindings = <
        &trans   &trans   &trans   &trans   &trans         &kp F10  &kp F7  &kp F8  &kp F9  &trans
        &bootloader &trans &trans &trans   &trans         &kp F11  &kp F4  &kp F5  &kp F6  &trans
        &trans   &trans   &trans   &trans   &trans         &kp F12  &kp F1  &kp F2  &kp F3  &trans
                                &trans     &trans         &trans   &trans
      >;
    };

    // ╭───────────────────────────────╮
    // │ Developer Layer              │
    // ╰───────────────────────────────╯
    dev_layer {
      bindings = <
        &trans   &trans   &kp LBRC &kp RBRC &trans         &trans   &trans   &trans   &trans   &trans
        &trans   &trans   &kp LPAR &kp RPAR &trans         &trans   &trans   &trans   &trans   &trans
        &trans   &trans   &kp LBKT &kp RBKT &trans         &trans   &trans   &trans   &trans   &trans
                                &trans     &trans         &trans   &trans
      >;
    };

    // ╭───────────────────────────────╮
    // │ Gaming Layer                 │
    // ╰───────────────────────────────╯
    game_layer {
      bindings = <
        &kp Q    &kp W    &kp E    &kp R    &kp T          &kp Y    &kp U    &kp I    &kp O     &kp P
        HRML(A,S,D,F)                   &kp G          &kp H       HRMR(J,K,L,SQT)
        &kp Z    &kp X    &kp C    &kp V    &kp B          &kp N    &kp M    &kp COMMA &kp DOT   &kp FSLH
                                &mo DEF   &kp SPACE       &mo DEF  &kp ENTER
      >;
    };
  };
};
